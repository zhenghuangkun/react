<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<settings>
		<!-- 输出日志  后台就会有sql语句的输出-->
        <setting name="logImpl" value="SLF4J" />
       	<!-- 开启缓存支持   -->
		<setting name="cacheEnabled" value="true"/>
		<!-- 查询时，关闭关联对象即时加载以提高性能  -->
		<setting name="lazyLoadingEnabled" value="true"/>
		<!-- 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 -->
		<setting name="multipleResultSetsEnabled" value="true"/>
		<!-- 允许使用列标签代替列名 -->  
		<setting name="useColumnLabel" value="true"/>
		<!-- 允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 -->
		<setting name="useGeneratedKeys" value="true"/>
		<!-- 指定 MyBatis 应如何自动映射列到字段或属性 -->
		<setting name="autoMappingBehavior" value="PARTIAL"/>
		<!-- 指定发现自动映射目标未知列（或者未知属性类型）的行为 -->
		<setting name="autoMappingUnknownColumnBehavior" value="WARNING"/>
		<!-- 配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（prepared statements）； BATCH 执行器将重用语句并执行批量更新 -->
		<setting name="defaultExecutorType" value="SIMPLE"/>
		<!-- 设置超时时间，它决定驱动等待数据库响应的秒数 -->
		<setting name="defaultStatementTimeout" value="60"/>
		<!-- 为驱动的结果集获取数量（fetchSize）设置一个提示值。此参数只可以在查询设置中被覆盖 -->
		<setting name="defaultFetchSize" value="100"/>
		<!-- 允许在嵌套语句中使用分页（RowBounds）。如果允许使用则设置为false -->
		<setting name="safeRowBoundsEnabled" value="false"/>
		<!-- 是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 的类似映射 -->
		<setting name="mapUnderscoreToCamelCase" value="false"/>
		<!-- MyBatis 利用本地缓存机制（Local Cache）防止循环引用（circular references）和加速重复嵌套查询。 默认值为 SESSION，这种情况下会缓存一个会话中执行的所有查询。 若设置值为 STATEMENT，本地会话仅用在语句执行上，对相同 SqlSession 的不同调用将不会共享数据 -->
		<setting name="localCacheScope" value="SESSION"/>
		<!-- 当没有为参数提供特定的 JDBC 类型时，为空值指定 JDBC 类型。 某些驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，比如 NULL、VARCHAR 或 OTHER -->
		<setting name="jdbcTypeForNull" value="OTHER"/>
		<!-- 指定哪个对象的方法触发一次延迟加载 -->
		<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>
    </settings>

    <!-- 设置类别名 -->
    <typeAliases>
        <package name="com.nodeserver.entity"/>
    </typeAliases>
    
</configuration>
